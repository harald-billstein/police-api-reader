version: '3'

services:
  traefik:
    image: traefik:v2.10.4
    container_name: traefik
    command:
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --log.level=INFO
      - --certificatesresolvers.myresolver.acme.dnschallenge=true
      - --certificatesresolvers.myresolver.acme.dnschallenge.provider=route53
      #     - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.myresolver.acme.email=harald.billstein@harbil.se
      - --certificatesresolvers.myresolver.acme.storage=letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
      - 8085:8080
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ../../letsencrypt:/letsencrypt

  portainer:
    image: portainer/portainer-ce:2.19.1
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 8084:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainerdata:/data
    labels:
      # Frontend
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`portainer.harbil.se`) || Host(`www.portainer.harbil.se`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=9000"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"

  redpanda:
    command:
      - redpanda
      - start
      - --set redpanda.enable_idempotence=true
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
    image: docker.vectorized.io/vectorized/redpanda:latest
    container_name: redpanda
    ports:
      - 9092:9092
      - 29092:29092
    volumes:
      - redpandadata:/var/lib/redpanda/data

  mongodb:
    image: mongo:latest
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
      - mongodata:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

  kowl:
    image: quay.io/cloudhut/kowl:latest
    container_name: kowl
    restart: on-failure
    environment:
      KAFKA_BROKERS: "redpanda:29092"
    ports:
      - "8080:8080"
    entrypoint: ./kowl
    depends_on:
      - redpanda

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - 8081:8081
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
    restart: unless-stopped

  police-api-reader:
    image: police-api-reader:latest
    container_name: police-api-reader
    ports:
      - "8082:8080"
    volumes:
      - mongodata:/data/db
    depends_on:
      - redpanda
      - mongodb
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: "redpanda:29092"
      SPRING_DATA_MONGODB_URI: ${POLICE_API_READER_SPRING_DATA_MONGODB_URI}
      SPRING.DATA.MONGODB.DATABASE: police-event
      POLICE_API_URL: https://polisen.se/api/events
      POLICE_EXTENDED_BASE_URL: https://polisen.se
      KAFKA_EVENT_TOPIC: police-event

  police-twitter:
    image: police-twitter:latest
    container_name: police-twitter
    ports:
      - "8083:8083"
    volumes:
      - mongodata:/data/db
    depends_on:
      - redpanda
      - mongodb
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: "redpanda:29092"
      SPRING_DATA_MONGODB_URI: ${POLICE_TWITTER_SPRING_DATA_MONGODB_URI}
      SPRING.DATA.MONGODB.DATABASE: twitter-bot
      twitterConsumerKey: ${TWITTER_CONSUMER_KEY}
      twitterConsumerSecret: ${TWITTER_CONSUMER_SECRET}
      twitterAccessToken: ${TWITTER_ACCESS_TOKEN}
      twitterTokenSecret: ${TWITTER_TOKEN_SECRET}

  police-slack-plugin:
    image: police-slack-plugin:latest
    container_name: police-slack-plugin
    ports:
      - "8086:8080"
    environment:
      slack.client.secret: ${SLACK_CLIENT_SECRET}
      slack.client.id: ${SLACK_CLIENT_ID}
      slack.redirect.url: ${SLACK_REDIRECT_URL}
      spring.mvc.view.suffix: .html
    labels:
      # Frontend
      - "traefik.enable=true"
      - "traefik.http.routers.crimebot.rule=Host(`crimebot.harbil.se`) || Host(`www.crimebot.harbil.se`)"
      - "traefik.http.routers.crimebot.entrypoints=websecure"
      - "traefik.http.services.crimebot.loadbalancer.server.port=8080"
      - "traefik.http.routers.crimebot.service=crimebot"
      - "traefik.http.routers.crimebot.tls.certresolver=myresolver"
volumes:
  portainerdata:
    external: true
  mongodata:
    external: true
  redpandadata:
    external: true